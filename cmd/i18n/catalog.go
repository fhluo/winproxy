// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package i18n

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_US":   &dictionary{index: en_USIndex, data: en_USData},
		"zh_Hans": &dictionary{index: zh_HansIndex, data: zh_HansData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Auto-detect":                   10,
	"Bypass list":                   11,
	"Proxy address":                 7,
	"Script address":                9,
	"Use proxy":                     6,
	"Use script":                    8,
	"automatically detect settings": 4,
	"bypass list":                   5,
	"proxy address":                 1,
	"script address":                3,
	"use a proxy server":            0,
	"use setup script":              2,
}

var en_USIndex = []uint32{ // 13 elements
	0x00000000, 0x00000013, 0x00000021, 0x00000032,
	0x00000041, 0x0000005f, 0x0000006b, 0x00000075,
	0x00000083, 0x0000008e, 0x0000009d, 0x000000a9,
	0x000000b5,
} // Size: 76 bytes

const en_USData string = "" + // Size: 181 bytes
	"\x02use a proxy server\x02proxy address\x02use setup script\x02script ad" +
	"dress\x02automatically detect settings\x02bypass list\x02Use proxy\x02Pr" +
	"oxy address\x02Use script\x02Script address\x02Auto-detect\x02Bypass lis" +
	"t"

var zh_HansIndex = []uint32{ // 13 elements
	0x00000000, 0x00000016, 0x00000023, 0x00000036,
	0x00000043, 0x00000056, 0x0000007e, 0x00000094,
	0x000000a1, 0x000000b4, 0x000000c1, 0x000000d4,
	0x000000fc,
} // Size: 76 bytes

const zh_HansData string = "" + // Size: 252 bytes
	"\x02使用代理服务器\x02代理地址\x02使用设置脚本\x02脚本地址\x02自动检测设置\x02不使用代理服务器的地址列表\x02使用代理" +
	"服务器\x02代理地址\x02使用设置脚本\x02脚本地址\x02自动检测设置\x02不使用代理服务器的地址列表"

	// Total table size 585 bytes (0KiB); checksum: 56EAEC94
